name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀
on: [push]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."
  example_matrix:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        compiler: [gcc-12, clang-15]
        mpi: [openmpi, mpich]
    env:
      CC: ${{ matrix.compiler }}
      CXX: ${{ matrix.compiler }}
    steps:
      - name: Set compiler envs
        run: |
          echo "CC=${{ matrix.compiler }}" >> "$GITHUB_ENV"
          echo "CXX=$(echo $CC | sed -e 's/gcc/g++/' -e 's/clang/clang++/')" >> "$GITHUB_ENV"
      - name: Cache MPI installations
        id: cache-mpi
        uses: actions/cache@v4
        with:
          path: ~/opt
          key: mpi-build-${{ runner.os }}-${{ matrix.compiler }}-${{ matrix.mpi }}
      - if: ${{ matrix.mpi == 'openmpi' && steps.cache-mpi.outputs.cache-hit != 'true' }}
        name: Install Open MPI and UCX
        run: |
          UCX_VERSION=1.15.0
          echo "Installing UCX v${UCX_VERSION}..."
          wget -q https://github.com/openucx/ucx/releases/download/v${UCX_VERSION}/ucx-${UCX_VERSION}.tar.gz
          tar xvf ucx-${UCX_VERSION}.tar.gz
          cd ucx-${UCX_VERSION}/
          ./configure CC=$CC CXX=$CXX CFLAGS="-Wno-error" --prefix=${HOME}/opt/ucx --without-go
          make -j
          make install
      - name: Print environments
        run: |
          echo "Compiler   : ${{ matrix.compiler }}"
          echo "MPI        : ${{ matrix.mpi }}"
          echo "# of cores : $(nproc)"
          ${{ matrix.compiler }} --version
          [ ! -x "$(command -v ucx_info)" ] || ucx_info -v
